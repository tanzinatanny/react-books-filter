{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rafsunchowdhury/react-apps/react-filter/src/components/Items.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    // justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {// width: auto,\n    // height: 450,\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)'\n  }\n}));\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\n\nexport default function Items(props) {\n  _s();\n\n  const classes = useStyles();\n  const img = 'http://ia800602.us.archive.org/view_archive.php?archive=/24/items/olcovers95/olcovers95-M.zip&file=956754-M.jpg';\n  let tileData = [{\n    img: img,\n    title: 'This is Title',\n    author: 'Author'\n  }, {\n    img: img,\n    title: 'This is Title',\n    author: 'Author'\n  }, {\n    img: img,\n    title: 'This is Title',\n    author: 'Author'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(GridList, {\n      cellHeight: 400,\n      className: classes.gridList,\n      children: [/*#__PURE__*/_jsxDEV(GridListTile, {\n        cols: 2,\n        style: {\n          height: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(ListSubheader, {\n          component: \"div\",\n          children: \"Books\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, \"Subheader\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), tileData.map(tile => /*#__PURE__*/_jsxDEV(GridListTile, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: tile.img,\n          alt: tile.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n          title: tile.title,\n          subtitle: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"by: \", tile.author]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 39\n          }, this) // actionIcon={\n          //     <IconButton aria-label={`info about ${tile.title}`} className={classes.icon}>\n          //     </IconButton>\n          // }\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)]\n      }, tile.img, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Items, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Items;\n\nvar _c;\n\n$RefreshReg$(_c, \"Items\");","map":{"version":3,"sources":["/Users/rafsunchowdhury/react-apps/react-filter/src/components/Items.jsx"],"names":["React","makeStyles","GridList","GridListTile","GridListTileBar","ListSubheader","IconButton","useStyles","theme","root","display","flexWrap","overflow","backgroundColor","palette","background","paper","gridList","icon","color","Items","props","classes","img","tileData","title","author","height","map","tile"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,QAAQ,EAAE,MAFR;AAGF;AACAC,IAAAA,QAAQ,EAAE,QAJR;AAKFC,IAAAA,eAAe,EAAEL,KAAK,CAACM,OAAN,CAAcC,UAAd,CAAyBC;AALxC,GAD+B;AAQrCC,EAAAA,QAAQ,EAAE,CACN;AACA;AAFM,GAR2B;AAYrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE;AADL;AAZ+B,CAAZ,CAAD,CAA5B;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,KAAT,CAAgBC,KAAhB,EAAwB;AAAA;;AACnC,QAAMC,OAAO,GAAGf,SAAS,EAAzB;AAEA,QAAMgB,GAAG,GAAG,iHAAZ;AACA,MAAIC,QAAQ,GAAG,CACX;AACID,IAAAA,GAAG,EAAEA,GADT;AAEIE,IAAAA,KAAK,EAAE,eAFX;AAGIC,IAAAA,MAAM,EAAE;AAHZ,GADW,EAMX;AACIH,IAAAA,GAAG,EAAEA,GADT;AAEIE,IAAAA,KAAK,EAAE,eAFX;AAGIC,IAAAA,MAAM,EAAE;AAHZ,GANW,EAWX;AACIH,IAAAA,GAAG,EAAEA,GADT;AAEIE,IAAAA,KAAK,EAAE,eAFX;AAGIC,IAAAA,MAAM,EAAE;AAHZ,GAXW,CAAf;AAiBA,sBACI;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACb,IAAxB;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,UAAU,EAAE,GAAtB;AAA2B,MAAA,SAAS,EAAEa,OAAO,CAACL,QAA9C;AAAA,8BACI,QAAC,YAAD;AAA8B,QAAA,IAAI,EAAE,CAApC;AAAuC,QAAA,KAAK,EAAE;AAAEU,UAAAA,MAAM,EAAE;AAAV,SAA9C;AAAA,+BACI,QAAC,aAAD;AAAe,UAAA,SAAS,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,SAAkB,WAAlB;AAAA;AAAA;AAAA;AAAA,cADJ,EAIKH,QAAQ,CAACI,GAAT,CAAcC,IAAD,iBACV,QAAC,YAAD;AAAA,gCACI;AAAK,UAAA,GAAG,EAAEA,IAAI,CAACN,GAAf;AAAoB,UAAA,GAAG,EAAEM,IAAI,CAACJ;AAA9B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,eAAD;AACI,UAAA,KAAK,EAAEI,IAAI,CAACJ,KADhB;AAEI,UAAA,QAAQ,eAAE;AAAA,+BAAWI,IAAI,CAACH,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFd,CAGI;AACA;AACA;AACA;;AANJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,SAAmBG,IAAI,CAACN,GAAxB;AAAA;AAAA;AAAA;AAAA,cADH,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GA3CuBH,K;UACJb,S;;;KADIa,K","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        // justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n        // width: auto,\n        // height: 450,\n    },\n    icon: {\n        color: 'rgba(255, 255, 255, 0.54)',\n    },\n}));\n\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\nexport default function Items( props ) {\n    const classes = useStyles();\n\n    const img = 'http://ia800602.us.archive.org/view_archive.php?archive=/24/items/olcovers95/olcovers95-M.zip&file=956754-M.jpg';\n    let tileData = [\n        {\n            img: img,\n            title: 'This is Title',\n            author: 'Author'\n        },\n        {\n            img: img,\n            title: 'This is Title',\n            author: 'Author'\n        },\n        {\n            img: img,\n            title: 'This is Title',\n            author: 'Author'\n        },\n    ];\n    return (\n        <div className={classes.root}>\n            <GridList cellHeight={400} className={classes.gridList}>\n                <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\n                    <ListSubheader component=\"div\">Books</ListSubheader>\n                </GridListTile>\n                {tileData.map((tile) => (\n                    <GridListTile key={tile.img}>\n                        <img src={tile.img} alt={tile.title} />\n                        <GridListTileBar\n                            title={tile.title}\n                            subtitle={<span>by: {tile.author}</span>}\n                            // actionIcon={\n                            //     <IconButton aria-label={`info about ${tile.title}`} className={classes.icon}>\n                            //     </IconButton>\n                            // }\n                        />\n                    </GridListTile>\n                ))}\n            </GridList>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}