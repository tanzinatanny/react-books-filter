{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rafsunchowdhury/react-apps/react-filter/src/components/Filters.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Items from \"./Items\";\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nconst useStyles = makeStyles(theme => ({\n  // root: {\n  //     flexGrow: 1,\n  // },\n  menuButton: {},\n  title: {},\n  header: {},\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  filtersWrapper: {}\n}));\nexport default function Filters(props) {\n  _s();\n\n  const classes = useStyles();\n  const [type, setType] = useState('any');\n  const [price, setPrice] = useState('any');\n  const [rank, setRank] = useState('asc');\n  const [books, setBooks] = useState(props.books);\n\n  const filterBooks = () => {\n    return props.books.filter(filterByType);\n  }; // useEffect( filterBooks );\n\n\n  const filterByType = item => {\n    if (type === 'any') {\n      return true;\n    }\n\n    if (type === item.type) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const filterByPrice = item => {\n    if (price === 'any') {\n      return true;\n    }\n\n    if (price == 1) {\n      return item.price <= 10;\n    }\n\n    if (price == 2) {\n      return item.price > 10 && item.price <= 30;\n    }\n\n    if (price == 3) {\n      return item.price > 30;\n    }\n\n    return true;\n  };\n\n  const sortByRank = (a, b) => a.rank > b.rank;\n\n  const updateType = (e, v) => setType(v);\n\n  const updatePrice = (e, v) => setPrice(v);\n\n  const updateRank = (e, v) => setRank(v);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.filtersWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Genre:\", /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n          value: type,\n          exclusive: true,\n          onChange: updateType,\n          children: [\"Genre :\", /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"any\",\n            children: \"Any\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"1\",\n            \"aria-label\": \"centered\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: '< 10'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"2\",\n            \"aria-label\": \"right aligned\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: '11-30'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"3\",\n            \"aria-label\": \"right aligned\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: '31+'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Price Range:\", /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n          value: type,\n          exclusive: true,\n          onChange: updatePrice,\n          children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"any\",\n            children: \"Any\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"Autobiography\",\n            \"aria-label\": \"centered\",\n            children: \"Autobiography\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"Nonfiction\",\n            \"aria-label\": \"right aligned\",\n            children: \"Nonfiction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 9,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: /*#__PURE__*/_jsxDEV(Items, {\n            books: filterBooks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: \"Selected Items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Filters, \"JXkyx3GLdcfrknUkYvlEsEva8+U=\", false, function () {\n  return [useStyles];\n});\n\n_c = Filters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"sources":["/Users/rafsunchowdhury/react-apps/react-filter/src/components/Filters.jsx"],"names":["React","useEffect","useState","makeStyles","Button","IconButton","GridList","GridListTile","GridListTileBar","Grid","Paper","Items","ToggleButton","ToggleButtonGroup","useStyles","theme","menuButton","title","header","paper","padding","spacing","textAlign","color","palette","text","secondary","filtersWrapper","Filters","props","classes","type","setType","price","setPrice","rank","setRank","books","setBooks","filterBooks","filter","filterByType","item","filterByPrice","sortByRank","a","b","updateType","e","v","updatePrice","updateRank","root"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Items from \"./Items\";\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nconst useStyles = makeStyles((theme) => ({\n    // root: {\n    //     flexGrow: 1,\n    // },\n    menuButton: {\n    },\n    title: {\n\n    },\n    header: {\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n    filtersWrapper: {\n\n    }\n}));\n\nexport default function Filters(props) {\n    const classes = useStyles();\n\n    const [type, setType] = useState('any');\n    const [price, setPrice] = useState('any');\n    const [rank, setRank] = useState('asc');\n    const [books, setBooks] = useState(props.books);\n\n\n    const filterBooks = () => {\n        return props.books.filter(filterByType);\n    }\n\n    // useEffect( filterBooks );\n\n    const filterByType = ( item ) => {\n        if ( type === 'any' ) {\n            return true;\n        }\n\n        if ( type === item.type ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    const filterByPrice = ( item ) => {\n        if ( price === 'any' ) {\n            return true;\n        }\n\n        if ( price == 1 ) {\n            return item.price <= 10;\n        }\n\n        if ( price == 2 ) {\n            return ( item.price > 10 && item.price <= 30 );\n        }\n\n        if ( price == 3 ) {\n            return item.price > 30;\n        }\n\n        return true;\n    }\n\n    const sortByRank = ( a, b ) => a.rank > b.rank;\n\n    const updateType = (e, v) => setType(v);\n    const updatePrice = (e, v) => setPrice(v);\n    const updateRank = (e, v) => setRank(v);\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.filtersWrapper}>\n                <div>\n                    Genre:\n                    <ToggleButtonGroup\n                        value={type}\n                        exclusive\n                        onChange={updateType}\n                    >\n                        Genre :\n                        <ToggleButton value=\"any\">\n                            Any\n                        </ToggleButton>\n                        <ToggleButton value=\"1\" aria-label=\"centered\">\n                            <span>{'< 10'}</span>\n                        </ToggleButton>\n                        <ToggleButton value=\"2\" aria-label=\"right aligned\">\n                            <span>{'11-30'}</span>\n                        </ToggleButton>\n                        <ToggleButton value=\"3\" aria-label=\"right aligned\">\n                            <span>{'31+'}</span>\n                        </ToggleButton>\n\n                    </ToggleButtonGroup>\n                </div>\n                <div>\n                    Price Range:  \n                    <ToggleButtonGroup\n                        value={type}\n                        exclusive\n                        onChange={updatePrice}\n                    >\n                        <ToggleButton value=\"any\">\n                            Any\n                        </ToggleButton>\n                        <ToggleButton value=\"Autobiography\" aria-label=\"centered\">\n                            Autobiography\n                        </ToggleButton>\n                        <ToggleButton value=\"Nonfiction\" aria-label=\"right aligned\">\n                            Nonfiction\n                        </ToggleButton>\n\n                    </ToggleButtonGroup>\n                </div>\n            </div>\n\n           {/*<button value=\"any\" onClick={updateType}>Any</button>*/}\n           {/*<button value=\"Autobiography\" onClick={updateType}>Auto</button>*/}\n           {/*<button value=\"Nonfiction\" onClick={updateType}>NonFiction</button>*/}\n            <Grid container spacing={3}>\n                <Grid item xs={9}>\n                    <Paper className={classes.paper}>\n                        <Items books={filterBooks}/>\n                    </Paper>\n                </Grid>\n                <Grid item xs={3}>\n                    <Paper className={classes.paper}>Selected Items</Paper>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}