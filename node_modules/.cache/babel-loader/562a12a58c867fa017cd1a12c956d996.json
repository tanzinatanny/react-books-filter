{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rafsunchowdhury/react-apps/react-filter/src/components/Items.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from \"@material-ui/core/Button\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    marginBottom: 40\n  },\n  image: {\n    height: 250,\n    width: 180,\n    top: 0,\n    transform: \"none\"\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)'\n  },\n  price: {},\n  title: {\n    height: 100\n  }\n}));\nexport default function Items(props) {\n  _s();\n\n  const classes = useStyles();\n  let books = props.books;\n  let tileData = books.map(book => {\n    return {\n      img: book.book_image,\n      title: book.title,\n      author: book.author,\n      price: book.price,\n      rank: book.rank\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(GridList, {\n      cols: 3,\n      cellHeight: 360,\n      children: tileData.map(tile => /*#__PURE__*/_jsxDEV(GridListTile, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: tile.img,\n          alt: tile.title,\n          className: classes.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n          className: classes.title,\n          title: ` #${tile.rank} - ${tile.title}`,\n          subtitle: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"By: \", tile.author]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Price: \", tile.price, \" \", /*#__PURE__*/_jsxDEV(Button, {\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 60\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)]\n      }, tile.rank, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Items, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Items;\n\nvar _c;\n\n$RefreshReg$(_c, \"Items\");","map":{"version":3,"sources":["/Users/rafsunchowdhury/react-apps/react-filter/src/components/Items.jsx"],"names":["React","makeStyles","GridList","GridListTile","GridListTileBar","ListSubheader","IconButton","Button","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","marginBottom","image","height","width","top","transform","icon","color","price","title","Items","props","classes","books","tileData","map","book","img","book_image","author","rank","tile"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n        marginBottom: 40\n    },\n    image: {\n        height: 250,\n        width: 180,\n        top: 0,\n        transform:\"none\",\n    },\n    icon: {\n        color: 'rgba(255, 255, 255, 0.54)',\n    },\n\n    price: {\n\n    },\n\n    title: {\n        height: 100,\n    }\n}));\n\nexport default function Items( props ) {\n    const classes = useStyles();\n    let books = props.books;\n    let tileData = books.map( (book) => {\n\n        return {\n            img: book.book_image,\n            title: book.title,\n            author: book.author,\n            price: book.price,\n            rank: book.rank,\n        }\n    } );\n    return (\n        <div className={classes.root}>\n            <GridList cols={3} cellHeight={360}>\n                {/*<GridListTile key=\"Subheader\">*/}\n                {/*    <ListSubheader component=\"div\">Books</ListSubheader>*/}\n                {/*</GridListTile>*/}\n                {tileData.map((tile) => (\n                    <GridListTile key={tile.rank}>\n                        <img src={tile.img} alt={tile.title} className={classes.image} />\n                        <GridListTileBar\n                            className={classes.title}\n                            title={ ` #${tile.rank} - ${tile.title}` }\n                            subtitle={\n                                <div>\n                                    <p>By: {tile.author}</p>\n                                    <p>Price: {tile.price} <Button>Add</Button></p>\n                                </div>\n                            }\n                        />\n\n                    </GridListTile>\n                ))}\n            </GridList>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}