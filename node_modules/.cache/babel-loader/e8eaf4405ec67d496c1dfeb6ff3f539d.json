{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rafsunchowdhury/react-apps/react-filter/src/components/Items.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    marginBottom: 50\n  },\n  image: {\n    height: 280,\n    width: 180\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)'\n  },\n  price: {}\n}));\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\n\nexport default function Items(props) {\n  _s();\n\n  const classes = useStyles();\n  let tileData = props.books.map(book => {\n    return {\n      img: book.book_image,\n      title: book.title,\n      author: book.author,\n      price: book.price\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(GridList, {\n      cols: 3,\n      cellHeight: 500,\n      children: tileData.map(tile => /*#__PURE__*/_jsxDEV(GridListTile, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: tile.img,\n          alt: tile.title,\n          className: classes.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.price,\n          children: `Price ${tile.price}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n          title: tile.title,\n          subtitle: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"By: \", tile.author]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Price: \", tile.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }, this) // actionIcon={\n          // }\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)]\n      }, tile.img, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Items, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Items;\n\nvar _c;\n\n$RefreshReg$(_c, \"Items\");","map":{"version":3,"sources":["/Users/rafsunchowdhury/react-apps/react-filter/src/components/Items.jsx"],"names":["React","makeStyles","GridList","GridListTile","GridListTileBar","ListSubheader","IconButton","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","marginBottom","image","height","width","icon","color","price","Items","props","classes","tileData","books","map","book","img","book_image","title","author","tile"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n        marginBottom: 50\n    },\n    image: {\n        height: 280,\n        width: 180,\n    },\n    icon: {\n        color: 'rgba(255, 255, 255, 0.54)',\n    },\n\n    price: {\n\n    },\n}));\n\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\nexport default function Items( props ) {\n    const classes = useStyles();\n    let tileData = props.books.map( (book) => {\n\n        return {\n            img: book.book_image,\n            title: book.title,\n            author: book.author,\n            price: book.price,\n        }\n    } );\n    return (\n        <div className={classes.root}>\n            <GridList cols={3} cellHeight={500}>\n                {/*<GridListTile key=\"Subheader\">*/}\n                {/*    <ListSubheader component=\"div\">Books</ListSubheader>*/}\n                {/*</GridListTile>*/}\n                {tileData.map((tile) => (\n                    <GridListTile key={tile.img}>\n                        <img src={tile.img} alt={tile.title} className={classes.image}/>\n                        <p className={classes.price}>{`Price ${tile.price}`}</p>\n                        <GridListTileBar\n                            title={tile.title}\n                            subtitle={\n                                <div>\n                                    <p>By: {tile.author}</p>\n                                    <p>Price: {tile.price}</p>\n                                    <button>Add</button>\n                                </div>\n                            }\n                            // actionIcon={\n                            // }\n                        />\n\n                    </GridListTile>\n                ))}\n            </GridList>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}